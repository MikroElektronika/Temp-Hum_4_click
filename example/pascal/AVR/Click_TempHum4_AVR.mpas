{*
Example for TempHum4 Click

    Date          : Jan 2018.
    Author        : MikroE Team

Test configuration AVR :
    
    MCU              : ATMEGA32
    Dev. Board       : EasyAVR v7 
    AVR Compiler ver : v7.0.1.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes I2C module and CS pin,RST pin as OUTPUT and INT pin as INPUT
- Application Initialization - Initializes Driver init and settings chip mode ACTIVE and configuration measurement
- Application Task - (code snippet) -  Reads the temperature and huminidy and logs to the USBUART every 500 ms.

*}
program Click_TempHum4_AVR;

uses Click_TempHum4_types, Click_TempHum4_config;

var
    temp_txt : array[256] of char; 
    hum_txt : array[256] of char; 
    Temperature : real; 
    Huminidy : real; 
    
procedure systemInit(); 
begin

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT); 
    mikrobus_i2cInit(_MIKROBUS1, @_TEMPHUM4_I2C_CFG[0]); 
    mikrobus_logInit(_LOG_USBUART, 9600); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    temphum4_i2cDriverInit(T_TEMPHUM4_P(@_MIKROBUS1_GPIO), T_TEMPHUM4_P(@_MIKROBUS1_I2C), 0x42); 
    temphum4_setMode(_TEMPHUM4_MODE_ACTIVE); 
    temphum4_Configuration((((((_TEMPHUM4_CONF_NORMAL_OPERATION or _TEMPHUM4_CONF_HEATER_DISABLED) or _TEMPHUM4_CONF_MODE_TEMP_AND_HUM) or _TEMPHUM4_CONF_BATTERY_VOLTAGE_2_8_V) or _TEMPHUM4_CONF_TEMPERATURE_14bit) or _TEMPHUM4_CONF_HUMINIDY_14bit)); 
    Delay_100ms(); 
    mikrobus_logWrite('--- Init done ---', _LOG_LINE); 

end;

procedure applicationTask(); 
begin

    Temperature := temphum4_getTemperature(); 
    Huminidy := temphum4_getHuminidy(); 
    FloatToStr(Temperature, temp_txt); 
    mikrobus_logWrite('Temperature : ', _LOG_TEXT); 
    mikrobus_logWrite(temp_txt, _LOG_LINE); 
    FloatToStr(Huminidy, hum_txt); 
    mikrobus_logWrite('Huminidy : ', _LOG_TEXT); 
    mikrobus_logWrite(hum_txt, _LOG_LINE); 
    Delay_ms(500); 

end;

begin
    Temperature := 0;
    Huminidy := 0;

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.